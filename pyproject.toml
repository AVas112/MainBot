[tool.poetry]
name = "mainbot"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
openai = "^1.82.0"
python-telegram-bot = "^21.6"
python-dotenv = "^1.0.1"
aiofiles = "^23.2.1"
aiosqlite = "^0.19.0"
apscheduler = "^3.11.0"
pydantic = "2.6.1"
pydantic-settings = "2.1.0"
httpx = {extras = ["socks"], version = "^0.27.0"}
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
jinja2 = "^3.1.3"

[tool.poetry.group.dev.dependencies]
ruff = "*"
autoflake = "*"
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.0.0"
pylint = "^3.3.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.autoflake]
recursive = true
in-place = true
remove-all-unused-imports = true
ignore-init-module-imports = true

[tool.pylint]
disable = [
    "all",
]
enable = [
    "E1120", # no value for required parameter
    "E1121", # too many positional arguments
    "E1123", # unexpected keyword argument
    "E1124", # redundant keyword argument (both positional and named)
    "E1125", # missing required keyword-only argument
    "W0221", # arguments of overridden method differ from parent method
    "W0222", # signature of overridden method differs from parent method
]
jobs = 0
max-line-length = 120

[tool.ruff]
include = ["**/*.py"]
fix = true
line-length = 120  # Глобальная настройка для всех линтеров

[tool.ruff.lint]
extend-select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "Q",
    "D", # Enable check docstrings
    "I", # isort
]

extend-ignore = [
    'D100', # Docs in a public module
    'D101', # Docs in public class
    'D102', # Docs in public method
    'D103', # Docs in public function
    'D104', # Docs in a public package - __init__.py
    'D105', # Docs in magic methods
    'D106', # Docs in public nested class
    'D205', # 1 blank line required between summary line and description
    'D401', # First line should be in imperative mood
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
lines-after-imports = 2
split-on-trailing-comma = true
relative-imports-order = "closest-to-furthest"
